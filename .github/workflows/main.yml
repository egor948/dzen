# .github/workflows/main.yml
name: Auto RSS Update

on:
  workflow_dispatch:
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π —á–∞—Å —Å 07:00 –¥–æ 21:00 –ø–æ UTC (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç 10:00 - 00:00 UTC+3)
    - cron: '0 7-21 * * *'

jobs:
  update-rss:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4
      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: 3. Install dependencies
        run: pip install -r requirements.txt
      - name: 4. Run the main script
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          SESSION_STRING: ${{ secrets.SESSION_STRING }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: python main.py
      - name: 5. Commit and push if there are changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–∏ rss, –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏)
          git add .
          git diff --staged --quiet || git commit -m "üóûÔ∏è Auto-update RSS feed"
          git push```
*(–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —è —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω–∏–ª `git add rss.xml` –Ω–∞ `git add .`, —á—Ç–æ–±—ã –≤ –∫–æ–º–º–∏—Ç –ø–æ–ø–∞–¥–∞–ª–∏ –∏ –Ω–æ–≤—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è).*

---

### 2, 3 –∏ 4. –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥ `main.py` —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π –ò–ò, RSS –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

–≠—Ç–æ—Ç –∫–æ–¥ ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–π –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã. –û–Ω —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—Å—ë, —á—Ç–æ –≤—ã –ø—Ä–æ—Å–∏–ª–∏.

**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞—à–µ–≥–æ `main.py` –Ω–∞ —ç—Ç–æ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥:**
```python
# main.py
import os
import requests
import datetime
from datetime import timedelta
from telethon import TelegramClient
from telethon.sessions import StringSession
import xml.etree.ElementTree as ET
import xml.dom.minidom as minidom
import asyncio
import json
import re

# ================= –ù–ê–°–¢–†–û–ô–ö–ò =================
# Telegram
API_ID = os.environ.get("API_ID")
API_HASH = os.environ.get("API_HASH")
SESSION_STRING = os.environ.get("SESSION_STRING")

if not API_ID or not API_HASH or not SESSION_STRING:
    raise ValueError("–û–¥–∏–Ω –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ Telegram –Ω–µ –∑–∞–¥–∞–Ω!")

client = TelegramClient(StringSession(SESSION_STRING), int(API_ID), API_HASH)

# –ù–æ–≤—ã–π, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
CHANNELS_LIST = [
    "breakevens", "spurstg", "bluecityzens", "manutd_one", "lexusarsenal", "sixELCE", "astonvillago",
    "tg_barca", "ZZoneRM", "psgdot", "FcMilanItaly", "Vstakane", "LaligaOfficial_rus", "SportEPL", "tg_epl",
    "bundesliga_live", "wearethearsenal", "tg_calcio", "italianfootbol", "Match_TV", "bundesligas1",
    "fcbarca_sports", "englishntvplus", "sportsrufootball", "sportsru", "real_sports", "atleticosmadrid",
    "amfans", "asmonacoRU", "NFFCCOYR", "fcBrightonHoveAlbion", "albionevening", "LeipzigFans", "BayerFanChannel",
    "BundesligaRuNET", "Herr_Baboba", "borussia_bundesliga", "Juventus2015", "bc_atalanta", "asromasiamonoi",
    "forzainter_ru", "internazionalemilanoo1908", "milanews_ru", "abibyllaev", "englandblog", "telingaterEPL", "tgprimera"
]
CHANNELS = sorted(list(set(CHANNELS_LIST))) # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º

# ================== Cloudflare AI ==================
CF_ACCOUNT_ID = os.environ.get("CF_ACCOUNT_ID", "").strip()
CF_API_TOKEN = os.environ.get("CF_API_TOKEN", "").strip()

if not CF_ACCOUNT_ID or not CF_API_TOKEN:
    raise ValueError("CF_ACCOUNT_ID –∏–ª–∏ CF_API_TOKEN –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö GitHub!")

# –ú–æ–¥–µ–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
TEXT_MODEL = "@cf/mistral/mistral-7b-instruct-v0.1"
IMAGE_MODEL = "@cf/stabilityai/stable-diffusion-xl-base-1.0"

# ================== –ü—Ä–æ—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ==================
RSS_FILE_PATH = os.path.join(os.getcwd(), "rss.xml")
IMAGE_DIR = os.path.join(os.getcwd(), "images") # –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
MAX_RSS_ITEMS = 30 # –£–≤–µ–ª–∏—á–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –≤ –ª–µ–Ω—Ç–µ
GITHUB_REPO_URL = f"https://github.com/{os.environ.get('GITHUB_REPOSITORY', '')}"
# ===============================================

async def get_channel_posts():
    """–°–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å."""
    all_posts = []
    now = datetime.datetime.now(datetime.timezone.utc)
    cutoff = now - timedelta(hours=1) # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    async with client:
        for channel_name in CHANNELS:
            print(f"–ü–∞—Ä—Å–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞: {channel_name}...")
            try:
                async for msg in client.iter_messages(channel_name, limit=50): # –ú–µ–Ω—å—à–µ –ª–∏–º–∏—Ç, —Ç.–∫. –ø–µ—Ä–∏–æ–¥ –º–µ–Ω—å—à–µ
                    if msg.date < cutoff: break
                    if msg.text: all_posts.append({"text": msg.text.strip()})
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ '{channel_name}': {e}")
    unique_posts = list(dict.fromkeys(p['text'] for p in all_posts))
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(unique_posts)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.")
    return "\n\n---\n\n".join(unique_posts)

def _call_cloudflare_ai(model, payload, timeout=180):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ API Cloudflare."""
    api_url = f"https://api.cloudflare.com/client/v4/accounts/{CF_ACCOUNT_ID}/ai/run/{model}"
    headers = {"Authorization": f"Bearer {CF_API_TOKEN}"}
    try:
        response = requests.post(api_url, headers=headers, json=payload, timeout=timeout)
        response.raise_for_status()
        return response
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ HTTP-–∑–∞–ø—Ä–æ—Å–∞ –∫ Cloudflare API: {e}")
        if e.response is not None:
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ ({e.response.status_code}): {e.response.text}")
        return None

def cluster_news_into_storylines(all_news_text):
    """–ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –≤ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å—é–∂–µ—Ç—ã –¥–ª—è —Å—Ç–∞—Ç–µ–π."""
    print("–≠—Ç–∞–ø 1: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Å—é–∂–µ—Ç—ã...")
    prompt = f"""[INST]–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Ç–æ–∫ –Ω–∏–∂–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–π—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–æ—Ç 2 –¥–æ 5) –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö —Å—é–∂–µ—Ç–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç—Å–∫–∏–µ —Å—Ç–∞—Ç—å–∏. –ò–≥–Ω–æ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ, –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–µ –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.

–î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å—é–∂–µ—Ç–∞ –≤–µ—Ä–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
1. `title`: –ö—Ä–∞—Ç–∫–æ–µ —Ä–∞–±–æ—á–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—é–∂–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω–∞—è —Å–∞–≥–∞ –ú–±–∞–ø–ø–µ", "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π –ê–ü–õ", "–°–∫–∞–Ω–¥–∞–ª –≤ –ò—Ç–∞–ª—å—è–Ω—Å–∫–æ–º —Ñ—É—Ç–±–æ–ª–µ").
2. `category`: –û–¥–Ω–æ-–¥–≤–∞ —Å–ª–æ–≤–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è RSS (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã", "–ê–ü–õ", "–°–µ—Ä–∏—è –ê", "–°–∫–∞–Ω–¥–∞–ª—ã").
3. `news_texts`: –ü–û–õ–ù–´–ô –∏ –ù–ï–ò–ó–ú–ï–ù–ï–ù–ù–´–ô —Ç–µ–∫—Å—Ç –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, –æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫ —ç—Ç–æ–º—É —Å—é–∂–µ—Ç—É.

–¢–≤–æ–π –æ—Ç–≤–µ—Ç –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –¢–û–õ–¨–ö–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON-–º–∞—Å—Å–∏–≤–∞. –ü—Ä–∏–º–µ—Ä:
```json
[
  {{
    "title": "–†–∞–±–æ—á–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—é–∂–µ—Ç–∞ 1",
    "category": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1",
    "news_texts": "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ 1...\\n---\\n–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ 2..."
  }},
  {{
    "title": "–†–∞–±–æ—á–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—é–∂–µ—Ç–∞ 2",
    "category": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2",
    "news_texts": "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ 3...\\n---\\n–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ 4..."
  }}
]
